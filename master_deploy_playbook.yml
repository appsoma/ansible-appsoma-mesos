---
- hosts: localhost
  connection: local
  vars_files:
    - playbook_vars/required_vars.yml
    - playbook_vars/aws_secret_vars.yml
    - playbook_vars/common.yml
  tasks:
    - name: Create Welder master DNS entry
      route53:
        command: create
        overwrite: yes
        type: CNAME
        zone: "{{ route53_zone }}"
        ttl: 10
        record: "{{ welder_dns_name }}.{{route53_zone}}"
        value: "{{ hostvars[groups[inventory_group_master][0]]['ec2_public_dns_name'] }}"
      when: use_route53 and welder_dns_name is defined

- hosts: [ "{{ inventory_group_master }}" ]
  remote_user: ubuntu
  sudo: True
  vars_files:
    - playbook_vars/common.yml
    - playbook_vars/required_vars.yml
    - playbook_vars/users.yml
  pre_tasks:

#    - name: Set Hostname to "{{ hostvars[inventory_hostname]['ec2_private_dns_name'] }}"
#      hostname: name="{{ hostvars[inventory_hostname]['ec2_private_dns_name'] )}"

    - name: Find NFS Server IP
      set_fact: nfsServerIp={{ hostvars[groups[inventory_group_service][0]]['ec2_private_ip_address'] }}
      when: groups[inventory_group_service] is defined

    - name:  Set zookeeper private IP list with port
      set_fact:
        zookeeper_hosts_with_port: |
          {% set comma = joiner(':' + zookeeper_client_port + ',') %}
          {% for item in groups[inventory_group_master] -%}
            {{ comma() }}{{ hostvars[item].ec2_private_ip_address }}:{{ zookeeper_client_port }}
          {%- endfor %}

    - name:  Set zookeeper private IP list
      set_fact:
        zookeeper_hosts_no_port: |
          {% set comma = joiner(',') %}
          {% for item in groups[inventory_group_master] -%}
            {{ comma() }}{{ hostvars[item].ec2_private_ip_address }}
          {%- endfor %}

  roles:
    # Install Python
    - role: ansible-python
    # Install NodeJs
    - role: ansible-nvm-nodejs
      nodejs_version: "v0.12.4"
      nodejs_global_packages:
        - browserify
        - mocha
        - nodejs-websocket
        - phantomjs
        - process
        - require
        - scribe-js
        - supervisor
      tags: ["nodejs"]
    # Install Docker
    - role: ansible-docker
    # Configure NFS
    - role: ansible-nfs-client
      nfsmount: "{{ data_mount_point }}"
      nfspath: "{{ nfs_data_mount }}"
      nfsserver: "{{ nfsServerIp }}"
      when: nfsServerIp is defined

    # Create an users
    - role: ansible-welder-user
      group: "{{ welder_group }}"
      user_list: "{{ welder_user_list }}"
      dataDir: "{{ data_mount_point }}"

    # Make sure we have usable JDKs on masters
    - role: ansible-java
      java_versions: [6, 7]

    # Install High Availability Proxy
    - role: ansible-haProxy

    # Install zookeeper
    - role: ansible-zookeeper
      zookeeper_hosts: "{{ groups[inventory_group_master] }}"
      zookeeper_id: "{{ hostvars[inventory_hostname]['ec2_tag_zoo_id'] }}"

    # Install mesos in master mode
    - role: ansible-mesos
      zookeeper_hostnames: "{{ zookeeper_hosts_with_port  }}"
      mesos_install_mode: "{{ 'master' if run_slave_on_master is not defined else 'master-slave' }}"
      mesos_cluster_name: "{{cluster_name}}"

    # Install marathon
    - role: ansible-marathon
      zookeeper_hostnames: "{{ zookeeper_hosts_with_port  }}"
      when: inventory_hostname == groups[inventory_group_master][0]

- include: playbooks/kafka_playbook.yml
- include: playbooks/storm_playbook.yml
- include: playbooks/rhino_playbook.yml
- include: playbooks/welder_playbook.yml

