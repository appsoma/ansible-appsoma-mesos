- name: Create VPC
  ec2_vpc:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    internet_gateway: yes
    region: "{{ ec2_region }}"
    cidr_block: "{{private_lan_net}}"
    resource_tags: { "Name": "{{ cluster_name }}-vpc" }
    subnets:
      - cidr: "{{private_lan_subnet}}"
        az: "{{ ec2_zone }}"
        resource_tags: { "Name": "{{ cluster_name }}-subnet"}
    route_tables:
      - subnets:
          - "{{private_lan_subnet}}"
        routes:
          - dest: 0.0.0.0/0
            gw: igw
    state: present
    wait: yes
  register: vpc

- name: Set VPC ID
  set_fact: aws_vpc_id="{{ vpc['vpc_id'] }}"

- name: Set Subnet ID
  set_fact: aws_vpc_subnet_id="{{ vpc['subnets'][0]['id']}}"

- name: Create All others Security Group
  ec2_group:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    name: "{{ cluster_name }}-all-sg"
    description: "Security group for cluster {{ cluster_name }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: "{{ alternate_ssh_port if alternate_ssh_port is defined else 10022 }}"
        to_port: "{{ alternate_ssh_port if alternate_ssh_port is defined else 10022 }}"
        cidr_ip: 0.0.0.0/0
      - proto: udp
        from_port: 10101
        to_port: 10101
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8000
        to_port: 9000
        cidr_ip: 0.0.0.0/0
      - proto: all
        group_name: "{{ cluster_name }}-all-sg"
      - proto: all
        group_name: "{{ cluster_name }}-master-sg"
        group_desc: "Security group for cluster {{ cluster_name }}"
  register: securityGroupAll

- name: Set all others security group ID variable
  set_fact: aws_all_security_group_id="{{ securityGroupAll['group_id'] }}"

- name: Create Master Security Group
  ec2_group:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ aws_vpc_id }}"
    name: "{{ cluster_name }}-master-sg"
    description: "Security group for cluster {{ cluster_name }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: "{{ alternate_ssh_port if alternate_ssh_port is defined else 10022 }}"
        to_port: "{{ alternate_ssh_port if alternate_ssh_port is defined else 10022 }}"
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 5050
        to_port: 5050
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 8000
        to_port: 9000
        cidr_ip: 0.0.0.0/0
      - proto: all
        group_name: "{{ cluster_name }}-master-sg"
      - proto: all
        group_name: "{{ cluster_name }}-all-sg"

  register: securityGroupMaster

- name: Set master security group ID variable
  set_fact: aws_master_security_group_id="{{ securityGroupMaster['group_id'] }}"





