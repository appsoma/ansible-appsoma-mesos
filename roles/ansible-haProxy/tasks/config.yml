- name: Set backend template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c set "/gandalf/haproxy_backend.cfg" "{{ lookup('template', '../templates/haproxy_backend.cfg.j2') }}"
  register: backend
  changed_when: backend.rc == 1
  failed_when: false

- name: Create backend template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -force=true -c creater "/gandalf/haproxy_backend.cfg" "{{ lookup('template', '../templates/haproxy_backend.cfg.j2') }}"
  register: backend_create
  when: backend.changed
  failed_when: "(backend_create.rc == 1) and (backend_create.stdout.find('node already exists') != -1)"

- name: Set frontends template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c set "/gandalf/haproxy_frontends.cfg" "{{ lookup('template', '../templates/haproxy_frontends.cfg.j2') }}"
  register: frontend
  changed_when: frontend.rc == 1
  failed_when: false

- name: Create frontends template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater "/gandalf/haproxy_frontends.cfg" "{{ lookup('template', '../templates/haproxy_frontends.cfg.j2') }}"
  register: frontend_create
  when: frontend.changed
  failed_when: "(frontend_create.rc == 1) and (frontend_create.stdout.find('node already exists') != -1)"

- name: Set port template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c set "/gandalf/haproxy_port.cfg" "{{ lookup('template', '../templates/haproxy_port.cfg.j2') }}"
  register: ports
  changed_when: ports.rc == 1
  failed_when: false

- name: Create port template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater "/gandalf/haproxy_port.cfg" "{{ lookup('template', '../templates/haproxy_port.cfg.j2') }}"
  register: port_create
  when: ports.changed
  failed_when: "(port_create.rc == 1) and (port_create.stdout.find('node already exists') != -1)"

- name: Set config template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c set "/gandalf/haproxy.cfg" "{{ lookup('template', '../templates/haproxy_template.cfg.j2') }}"
  register: configs
  changed_when: configs.rc == 1
  failed_when: false

- name: Create config template in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater "/gandalf/haproxy.cfg" "{{ lookup('template', '../templates/haproxy_template.cfg.j2') }}"
  register: config_create
  when: configs.changed
  failed_when: "(config_create.rc == 1) and (config_create.stdout.find('node already exists') != -1)"
  run_once: true

- name: Set subnet dns setting
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c set /gandalf/subnet_dns ".{{ service_discovery_dns_suffix }}"
  register: subnet
  changed_when: subnet.rc == 1
  failed_when: false

- name: Create subnet dns setting
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater /gandalf/subnet_dns ".{{ service_discovery_dns_suffix }}"
  register: subnet_create
  when: subnet.changed
  failed_when: "(subnet_create.rc == 1) and (subnet_create.stdout.find('node already exists') != -1)"

- name: Create services directory in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater /gandalf/services ""
  register: make_services
  changed_when: make_services.rc == 1
  failed_when: false

- name: Create internals directory in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater /internals ""
  register: make_services
  changed_when: make_services.rc == 1
  failed_when: false

- name: Create externals directory in zookeeper
  command: zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater /externals ""
  register: make_services
  changed_when: make_services.rc == 1
  failed_when: false

- name:  Set marathon masters
  set_fact:
    marathon_servers: |
      {% set comma = joiner('\n') %}
      {% for item in groups[inventory_group_master] -%}
        {{ comma() }}{{ hostvars[item].private_ip_address }}:8080
      {%- endfor %}

- name: Set marathons configuration in zookeeper
  command : zookeepercli -verbose --servers {{ zookeeper_host_list }} -c set /gandalf/marathons "{{ marathon_servers }}"
  register: marathons
  changed_when: marathons.rc == 1
  failed_when: false

- name: Create marathons configuration in zookeeper
  command : zookeepercli -verbose --servers {{ zookeeper_host_list }} -c creater /gandalf/marathons "{{ marathon_servers }}"
  register: marathons_create
  when: marathons.changed
  failed_when: "(marathons_create.rc == 1) and (marathons_create.stdout.find('node already exists') != -1)"



