# Resources for defining networking in the cluster
resource "aws_vpc" "vpc" {
  cidr_block = "{{ private_lan_net }}"
  enable_dns_support = true
  enable_dns_hostnames = true
  tags {
    Name = "${var.cluster_name}_vpc"
  }
}

resource "aws_subnet" "subnet" {
  vpc_id = "${aws_vpc.vpc.id}"
  availability_zone = "${var.aws_info.zone}"
  cidr_block = "{{ private_lan_subnet }}"
  map_public_ip_on_launch = true
  tags {
    Name = "${var.cluster_name}_subnet"
  }
}

resource "aws_internet_gateway" "igw" {
  vpc_id = "${aws_vpc.vpc.id}"
  tags {
    Name = "${var.cluster_name}_igw"
  }
}

resource "aws_route_table" "rtb" {
  vpc_id = "${aws_vpc.vpc.id}"
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = "${aws_internet_gateway.igw.id}"
  }
  tags {
    Name = "${var.cluster_name}_rtb"
  }
}

resource "aws_route_table_association" "rtb_assoc" {
    subnet_id = "${aws_subnet.subnet.id}"
    route_table_id = "${aws_route_table.rtb.id}"
}

resource "aws_security_group" "master_sg" {
  name = "${var.cluster_name}_master_sg"
  description = "Traffic for master nodes"
  vpc_id = "${aws_vpc.vpc.id}"


  tags {
    Name = "${var.cluster_name}_master_sg"
  }
}

resource "aws_security_group" "slave_sg" {
  name = "${var.cluster_name}_slave_sg"
  description = "Traffic for slave and service nodes"
  vpc_id = "${aws_vpc.vpc.id}"
  tags {
    Name = "${var.cluster_name}_slave_sg"
  }
}

resource "aws_security_group_rule" "slave_allow_all_egress" {
  type = "egress"
  from_port = 0
  to_port = 0
  protocol = "-1"
  cidr_blocks = ["0.0.0.0/0"]
  security_group_id = "${aws_security_group.slave_sg.id}"
}

resource "aws_security_group_rule" "master_allow_all_egress" {
  type = "egress"
  from_port = 0
  to_port = 0
  protocol = "-1"
  cidr_blocks = ["0.0.0.0/0"]
  security_group_id = "${aws_security_group.master_sg.id}"
}

resource "aws_security_group_rule" "slave_allow_all_from_master" {
    type = "ingress"
    from_port = 0
    to_port = 65535
    protocol = "tcp"
    security_group_id = "${aws_security_group.slave_sg.id}"
    source_security_group_id = "${aws_security_group.master_sg.id}"
}

resource "aws_security_group_rule" "slave_allow_all_from_slave" {
    type = "ingress"
    from_port = 0
    to_port = 65535
    protocol = "tcp"
    security_group_id = "${aws_security_group.slave_sg.id}"
    source_security_group_id = "${aws_security_group.slave_sg.id}"
}

resource "aws_security_group_rule" "master_allow_all_from_master" {
    type = "ingress"
    from_port = 0
    to_port = 65535
    protocol = "tcp"
    security_group_id = "${aws_security_group.master_sg.id}"
    source_security_group_id = "${aws_security_group.master_sg.id}"
}

resource "aws_security_group_rule" "master_allow_all_from_slave" {
    type = "ingress"
    from_port = 0
    to_port = 65535
    protocol = "tcp"
    security_group_id = "${aws_security_group.master_sg.id}"
    source_security_group_id = "${aws_security_group.slave_sg.id}"
}

resource "aws_security_group_rule" "master_allow_ssh" {
    type = "ingress"
    from_port = 22
    to_port = 22
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    security_group_id = "${aws_security_group.master_sg.id}"
}

resource "aws_security_group_rule" "master_allow_http" {
    type = "ingress"
    from_port = 80
    to_port = 80
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    security_group_id = "${aws_security_group.master_sg.id}"
}

resource "aws_security_group_rule" "master_allow_https" {
    type = "ingress"
    from_port = 443
    to_port = 443
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    security_group_id = "${aws_security_group.master_sg.id}"
}

resource "aws_security_group_rule" "slave_allow_ssh" {
    type = "ingress"
    from_port = 22
    to_port = 22
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    security_group_id = "${aws_security_group.slave_sg.id}"
}

resource "aws_security_group_rule" "slave_allow_openvpn" {
    type = "ingress"
    from_port = 1194
    to_port = 1194
    protocol = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
    security_group_id = "${aws_security_group.slave_sg.id}"
}