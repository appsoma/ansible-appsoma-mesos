- name: Create Terraform dir
  file: path="{{ terraform_dir }}/{{ cluster_name }}" state=directory

- name: Create general Terraform files from template
  template: src="{{ item }}.j2" dest="{{ terraform_dir }}/{{ cluster_name }}/{{ item }}"
  with_items:
    - "create_cluster.tf"
  when: cloud_provider == 'ec2'

- name: Create Provider's Terraform module directory
  file: path="{{ terraform_dir }}/{{ cluster_name }}/{{ cloud_provider }}" state=directory
  when: cloud_provider is defined and cloud_provider != "none"

- name: Create AWS Terraform files from template
  template: src="ec2/{{ item }}.j2" dest="{{ terraform_dir }}/{{ cluster_name }}/{{ cloud_provider }}/{{ item }}"
  with_items:
    - "aws_vars.tf"
    - "aws_network.tf"
    - "aws_resources.tf"
    - "aws_instances.tf"
    - "aws_dns.tf"
    - "outputs.tf"
  when: cloud_provider == 'ec2'

- name: Creaet Route53 Terraform module directory
  file: path="{{ terraform_dir }}/{{ cluster_name }}/route53" state=directory
  when: use_route53 is defined and use_route53

- name: Create Route53 Terraform files from template
  template: src="route53/{{ item }}.j2" dest="{{ terraform_dir }}/{{ cluster_name }}/route53/{{ item }}"
  with_items:
    - "route53_vars.tf"
    - "route53_ext.tf"
  when: use_route53 is defined and use_route53

- name: Run Terraform get
  command: terraform get
  args:
    chdir: "{{ terraform_dir }}/{{ cluster_name }}"
  register: tf_get

- name: Run Terraform plan
  command: terraform plan
  args:
    chdir: "{{ terraform_dir }}/{{ cluster_name }}"
  register: tf_plan
  changed_when: tf_plan.stdout.find('No changes. Infrastructure is up-to-date.') == -1

- name: Run Terraform apply
  command: terraform apply
  args:
    chdir: "{{ terraform_dir }}/{{ cluster_name }}"
  when: "tf_plan.changed and (terraform_plan_only is not defined or not terraform_plan_only)"
  register: tf_apply
  changed_when: tf_apply.stdout.find('0 added, 0 changed,') == -1

- name: Make list of created instances
  debug: msg="{{ lookup('template', '../templates/instance_list.j2') }}"
  when: tf_apply.changed

