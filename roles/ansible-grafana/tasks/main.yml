- name: Create directory for Grafana
  file: path=/opt/grafana state=directory

- name: Get Grafana 2.1.0-pre1
  get_url:
    url: https://grafanarel.s3.amazonaws.com/builds/grafana_2.1.0-pre1_amd64.deb
    dest: /opt/grafana/grafana_2.1.0-pre1_amd64.deb

#- name: Add Grafana repo key
#  apt_key: url=https://packagecloud.io/gpg.key

#- name: Add Grafana repo
#  apt_repository: repo="deb https://packagecloud.io/grafana/stable/debian/ wheezy main" state=present

- name: Install Graphana prerequisite packages
  apt: pkg="{{item}}" state=present update_cache=yes
  with_items:
    - adduser
    - libfontconfig
    - sqlite3

- name: Install Graphana package
  apt: deb="/opt/grafana/grafana_2.1.0-pre1_amd64.deb" state=present update_cache=yes

- name: Start Grafana
  service: name=grafana-server state=started enabled=yes

- name: Check for data source
  command: sqlite3 /var/lib/grafana/grafana.db "select name from data_source where name='{{ cluster_name }}';"
  register: source_db
  changed_when: source_db.stdout.find('{{ cluster_name }}') == -1 or source_db.stderr.find("Error") != -1
  failed_when: false

- name: Make data source sql string
  set_fact: data_insert_str="insert into data_source {{ data_source_columns }} values {{ data_source_values }};"
  when: source_db.changed

- name: Add InfluxDB data source
  command: sqlite3 /var/lib/grafana/grafana.db "{{ data_insert_str }}"
  when: source_db.changed

- name: Create local copy of dashboard import template
  local_action: template src=dashboard.json.j2 dest=/tmp/dashboard.json

- name: Create dashboard import template
  template: src=dashboard.json.j2 dest=/opt/grafana/dashboard.json

