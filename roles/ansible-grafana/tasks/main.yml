
- name: Create directory for Grafana
  file: path=/opt/grafana state=directory

- name: Get Grafana 2.1.0-pre1
  get_url:
    url: https://grafanarel.s3.amazonaws.com/builds/grafana_2.1.0-pre1_amd64.deb
    dest: /opt/grafana/grafana_2.1.0-pre1_amd64.deb

#- name: Add Grafana repo key
#  apt_key: url=https://packagecloud.io/gpg.key

#- name: Add Grafana repo
#  apt_repository: repo="deb https://packagecloud.io/grafana/stable/debian/ wheezy main" state=present

- name: Install Graphana prerequisite packages
  apt: pkg="{{item}}" state=present # update_cache=yes
  with_items:
    - adduser
    - libfontconfig
    - sqlite3

- name: Install Graphana package
  apt: deb="/opt/grafana/grafana_2.1.0-pre1_amd64.deb" state=present update_cache=yes

- name: Make Grafana config file
  template: src=grafana.ini.j2 dest=/etc/grafana/grafana.ini
  register: grafana_config

- name: Stop Grafana
  service: name=grafana-server state=stopped enabled=yes
  when: grafana_config.changed

- name: Start Grafana
  service: name=grafana-server state=started enabled=yes

- name: Make data source json
  template: src=influx_data_source.json.j2 dest=/opt/grafana/influx_data_source.json

- name: Add InfluxDB data source
  shell: "curl -X POST -H 'Content-Type: application/json' --user admin:admin -d @/opt/grafana/influx_data_source.json http://localhost:3000/api/datasources"

- name: Create dashboard import template
  template: src=dashboard.json.j2 dest=/opt/grafana/dashboard.json

- name: Add dashboard to Grafana
  shell: "curl -X POST -H 'Content-Type: application/json' --user admin:admin -d @/opt/grafana/dashboard.json http://localhost:3000/api/dashboards/db"

